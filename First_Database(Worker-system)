# Create database       → Creates a new database named 'ORG'
CREATE DATABASE ORG;

# Show databases        → Displays all existing databases on the server
SHOW DATABASES;

# Use database          → Selects 'ORG' as the working database
USE ORG;

# Create table Worker   → Defines a table to store employee information
CREATE TABLE Worker (
    WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,    # Unique auto-incremented worker ID
    FIRST_NAME CHAR(25),                                  # Employee's first name
    LAST_NAME CHAR(25),                                   # Employee's last name
    SALARY INT,                                           # Employee's salary
    JOINING_DATE DATETIME,                                # Date and time of joining
    DEPARTMENT CHAR(25)                                   # Department name
);

# Insert into Worker    → Adds 8 employee records to the Worker table
INSERT INTO Worker 
    (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
    (001, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR'),         # Record 1
    (002, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin'),     # Record 2
    (003, 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR'),       # Record 3
    (004, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin'),     # Record 4
    (005, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin'),       # Record 5
    (006, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account'),     # Record 6
    (007, 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account'),     # Record 7
    (008, 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 'Admin');    # Record 8

# Create table Bonus    → Defines a table for bonus info linked to Worker
CREATE TABLE Bonus (
    WORKER_REF_ID INT,                                   # Foreign key referencing Worker
    BONUS_AMOUNT INT,                                    # Bonus amount
    BONUS_DATE DATETIME,                                 # Date bonus was given
    FOREIGN KEY (WORKER_REF_ID)
        REFERENCES Worker(WORKER_ID)                     # Link to Worker table
        ON DELETE CASCADE                                # Delete bonus if worker is deleted
);

# Insert into Bonus     → Adds bonus records for specific workers
INSERT INTO Bonus 
    (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
    (001, 5000, '2016-02-20'),      # Bonus for Monika
    (002, 3000, '2016-06-11'),      # Bonus for Niharika
    (003, 4000, '2016-02-20'),      # Bonus for Vishal
    (001, 4500, '2016-02-20'),      # Additional bonus for Monika
    (002, 3500, '2016-06-11');      # Additional bonus for Niharika

# Create table Title    → Defines a table to store worker titles and effective dates
CREATE TABLE Title (
    WORKER_REF_ID INT,                                   # Foreign key to Worker
    WORKER_TITLE CHAR(25),                               # Job title
    AFFECTED_FROM DATETIME,                              # Date the title became active
    FOREIGN KEY (WORKER_REF_ID)
        REFERENCES Worker(WORKER_ID)                     # Link to Worker table
        ON DELETE CASCADE                                # Delete title if worker is deleted
);

# Insert into Title     → Adds title history records for workers
INSERT INTO Title 
    (WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
    (001, 'Manager', '2016-02-20 00:00:00'),           # Monika as Manager
    (002, 'Executive', '2016-06-11 00:00:00'),         # Niharika as Executive
    (008, 'Executive', '2016-06-11 00:00:00'),         # Geetika as Executive
    (005, 'Manager', '2016-06-11 00:00:00'),           # Vivek as Manager
    (004, 'Asst. Manager', '2016-06-11 00:00:00'),     # Amitabh as Asst. Manager
    (007, 'Executive', '2016-06-11 00:00:00'),         # Satish as Executive
    (006, 'Lead', '2016-06-11 00:00:00'),              # Vipul as Lead
    (003, 'Lead', '2016-06-11 00:00:00');              # Vishal as Lead
